diff --git a/src/pipeline/persist.js b/src/pipeline/persist.js
index cf5eb89db820619563b41a08588431bb0829a346..96e227cf454afd41e9274607a5bcca465cd37bb0 100644
--- a/src/pipeline/persist.js
+++ b/src/pipeline/persist.js
@@ -59,52 +59,52 @@ const META_KEYS = new Set([
   'created_at',
   'updated_at',
 ]);
 
 const CONFLICT_KEYS = ['brand', 'pn'];
 const NEVER_INSERT = new Set(['id', 'brand_norm', 'code_norm', 'pn_norm', 'created_at', 'updated_at']);
 
 const PN_RE = /\b[0-9A-Z][0-9A-Z\-_/().]{3,63}[0-9A-Z)]\b/i;
 const FORBIDDEN_RE = /(pdf|font|xref|object|type0|ffff)/i;
 const BANNED_PREFIX = /^(pdf|page|figure|table|sheet|rev|ver|draft)\b/i;
 const BANNED_EXACT = /^pdf-?1(\.\d+)?$/i;
 
 const RANGE_PATTERN = /(-?\d+(?:,\d{3})*(?:\.\d+)?)(?:\s*([kmgmunpµ]))?(?:\s*[a-z%°]*)?\s*(?:to|~|–|—|-)\s*(-?\d+(?:,\d{3})*(?:\.\d+)?)(?:\s*([kmgmunpµ]))?/i;
 const NUMBER_PATTERN = /(-?\d+(?:,\d{3})*(?:\.\d+)?)(?:\s*([kmgmunpµ]))?/i;
 const SCALE_MAP = {
   k: 1e3,
   m: 1e-3,
   g: 1e9,
   'µ': 1e-6,
   u: 1e-6,
   n: 1e-9,
   p: 1e-12,
 };
 
 const LLM_CONFIDENCE_THRESHOLD = (() => {
-  const raw = Number(process.env.SPEC_AI_CONFIDENCE_MIN ?? process.env.SPEC_NORMALIZE_CONFIDENCE ?? 0.6);
-  return Number.isFinite(raw) ? raw : 0.6;
+  const raw = Number(process.env.SPEC_AI_CONFIDENCE_MIN ?? process.env.SPEC_NORMALIZE_CONFIDENCE ?? 0.5);
+  return Number.isFinite(raw) ? raw : 0.5;
 })();
 
 const llmNormalizationCache = new Map();
 
 function buildBlueprintFieldMap(blueprint) {
   const map = new Map();
   if (!blueprint) return map;
 
   const raw =
     (blueprint.fields && typeof blueprint.fields === 'object' && blueprint.fields) ||
     blueprint.fields_json ||
     blueprint;
 
   if (Array.isArray(raw)) {
     for (const entry of raw) {
       if (!entry || typeof entry !== 'object') continue;
       const key = normKey(entry.name || entry.key || entry.field);
       if (!key) continue;
       map.set(key, entry);
     }
     return map;
   }
 
   if (raw && typeof raw === 'object') {
     for (const [name, meta] of Object.entries(raw)) {
