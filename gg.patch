diff --git a/src/utils/blueprint.js b/src/utils/blueprint.js
index 3de03d89b1b5e1dac9347897ab581094e6cdd0e5..bf06c8c77843a7c8499c46dddc9fd38762efb7d5 100644
--- a/src/utils/blueprint.js
+++ b/src/utils/blueprint.js
@@ -67,53 +67,58 @@ function ensureFamilyOverrides(blueprint, registryRow) {
 
   const variantKeys = Array.from(forcedVariantKeys);
   blueprint.variant_keys = variantKeys;
   ingestOptions.variant_keys = variantKeys;
   blueprint.ingestOptions = ingestOptions;
 
   const allowed = Array.isArray(blueprint.allowedKeys) ? blueprint.allowedKeys : [];
   const generic = [
     'pn_jp',
     'pn_aliases',
     'ordering_market',
     'coil_voltage_vdc',
     'coil_voltage_vac',
     'contact_form',
     'contact_arrangement',
     'terminal_form',
     'terminal_shape',
     'contact_rating_text',
     'dielectric_strength_v',
     'operate_time_ms',
     'release_time_ms',
     'coil_resistance_ohm',
     'operating_function',
     'packing_style',
     'insulation_resistance_mohm',
+    // legacy dimension keys (keep for backward compatibility)
     'dim_l_mm',
     'dim_w_mm',
     'dim_h_mm',
+    // normalized dimension keys (preferred)
+    'length_mm',
+    'width_mm',
+    'height_mm',
   ];
   blueprint.allowedKeys = Array.from(new Set([...allowed, ...variantKeys, ...generic]));
 
   if (registryRow?.specs_table && !blueprint.specsTable) {
     blueprint.specsTable = registryRow.specs_table;
   }
 
   return blueprint;
 }
 
 function normalizeBlueprint(row, registryRow) {
   if (!row) return null;
   const fields = row.fields_json || row.fields || {};
   const ingestOptionsRaw = row.ingest_options || row.ingestOptions || {};
   const ingestOptions = ingestOptionsRaw && typeof ingestOptionsRaw === 'object'
     ? { ...ingestOptionsRaw }
     : {};
   const codeRules = row.code_rules || row.codeRules || null;
   const allowedKeys = deriveAllowedKeys(fields, ingestOptionsRaw);
   let variantKeys = deriveVariantKeys(row);
   const specsTable = registryRow?.specs_table || registryRow?.specsTable || `${row.family_slug}_specs`;
 
   if (Array.isArray(ingestOptions.variant_keys)) {
     ingestOptions.variant_keys = normalizeKeyList(ingestOptions.variant_keys);
   }