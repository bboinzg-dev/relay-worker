diff --git a/src/pipeline/ingestAuto.js b/src/pipeline/ingestAuto.js
index cee81edcf2021efeea8a4b5f2267c3ed4fb1b59d..2f3be9defd5e3b54067a87ea01cce869f52caebc 100644
--- a/src/pipeline/ingestAuto.js
+++ b/src/pipeline/ingestAuto.js
@@ -3833,51 +3833,51 @@ async function persistProcessedData(processed = {}, overrides = {}) {
               .map((key) => String(key || '').trim())
               .filter((key) => key && !knownLower.has(key.toLowerCase())),
           ),
         );
         if (unknownKeys.length) {
           try {
             const { map } = await aiCanonicalizeKeys(family, unknownKeys, knownList);
             const widened = new Set(knownList);
             for (const key of unknownKeys) {
               const rec = map?.[key] || {};
               let target = String(rec.canonical || '').trim();
               if (!target || rec.action !== 'map') target = key;
               const lower = target.toLowerCase();
               if (!lower || knownLower.has(lower)) continue;
               knownLower.add(lower);
               widened.add(target);
             }
             blueprint = blueprint && typeof blueprint === 'object' ? blueprint : {};
             blueprint.allowedKeys = Array.from(widened);
           } catch (err) {
             console.warn('[persist] aiCanonicalizeKeys failed:', err?.message || err);
           }
         }
       }
 
-      await ensureDynamicColumnsForRows(qualified, records);
+      await ensureDynamicColumnsForRows(qualified, schemaEnsureRows);
       try {
         persistResult = await saveExtractedSpecs(qualified, family, records, {
           brand: brandOverride,
           pnTemplate,
           requiredKeys: effectiveRequired,
           coreSpecKeys: effectiveRequired,
           blueprint,
           runId,
           run_id: runId,
           jobId,
           job_id: jobId,
           gcsUri,
           orderingInfo: processed?.ordering_info,
           docType: processed?.doc_type,
         }) || persistResult;
       } catch (e) {
         console.warn('[persist] saveExtractedSpecs failed:', e?.message || e);
         if (!persistResult || typeof persistResult !== 'object') {
           persistResult = { upserts: 0, written: [], skipped: [], warnings: [] };
         }
         if (!Array.isArray(persistResult.warnings)) persistResult.warnings = [];
         persistResult.warnings.push(String(e?.message || e));
       }
     }
   } else if (!records.length) {