diff --git a/src/pipeline/variant-keys.js b/src/pipeline/variant-keys.js
index 5d47068b8f47ff6d8a1ff0361d8a2f207d34bb79..a7e2179d7bd2ba7f89a1e25b94cc841bff734f84 100644
--- a/src/pipeline/variant-keys.js
+++ b/src/pipeline/variant-keys.js
@@ -1,50 +1,50 @@
 'use strict';
 
 const db = require('../../db');
 
 const MIN_VARIATION_COUNT = 2;
 
 const VARIANT_DISCOVERY_ENABLED = /^(1|true|on)$/i.test(
   process.env.VARIANT_DISCOVERY_ENABLED || '0'
 );
 
 function parseEnvNumber(name, defaultValue, parser = parseFloat) {
   const raw = process.env[name];
   if (raw == null || raw === '') return defaultValue;
   const parsed = parser(raw);
   if (!Number.isFinite(parsed)) {
     console.warn(`[variant] invalid ${name}=${raw}, fallback=${defaultValue}`);
     return defaultValue;
   }
   return parsed;
 }
 
 const VARIANT_MIN_COVERAGE = parseEnvNumber('VARIANT_MIN_COVERAGE', 0.4, parseFloat);
 const VARIANT_MAX_CARDINALITY = Math.max(
   2,
-  parseEnvNumber('VARIANT_MAX_CARDINALITY', 20, (v) => parseInt(v, 10))
+  parseEnvNumber('VARIANT_MAX_CARDINALITY', 120, (v) => parseInt(v, 10))
 );
 const VARIANT_MIN_MI = Math.max(0, parseEnvNumber('VARIANT_MIN_MI', 0.05, parseFloat));
 const VARIANT_DISCOVERY_SAMPLE_LIMIT = Math.max(
   50,
   parseEnvNumber('VARIANT_DISCOVERY_SAMPLE_LIMIT', 750, (v) => parseInt(v, 10))
 );
 const VARIANT_MIN_SAMPLE = 8;
 const VARIANT_MAX_VALUE_LENGTH = 80;
 
 const RESERVED_VARIANT_KEYS = new Set([
   'id',
   'created_at',
   'updated_at',
   'brand',
   'brand_norm',
   'pn',
   'pn_norm',
   'code',
   'series',
   'image_uri',
   'datasheet_uri',
   'datasheet_url',
   'source_gcs_uri',
   'raw_json',
   'last_error',