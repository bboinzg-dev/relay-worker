diff --git a/src/config/env.js b/src/config/env.js
index d84c68a912b898a6218c2664a2561f3aa802a409..9a6730ecc3c9357734d8dbbcc41357178fa396cc 100644
--- a/src/config/env.js
+++ b/src/config/env.js
@@ -15,30 +15,30 @@ function bucketName(v) {
   return v;
 }
 
 module.exports = {
   // 프로젝트/리전
   PROJECT_ID:        req('GCP_PROJECT_ID'),
   VERTEX_LOCATION:   req('VERTEX_LOCATION'),
 
   // DocAI
   DOCAI_PROJECT_ID:  opt('DOCAI_PROJECT_ID', req('GCP_PROJECT_ID')),
   DOCAI_LOCATION:    opt('DOCAI_LOCATION', 'us'),
   DOCAI_PROCESSOR_ID:req('DOCAI_PROCESSOR_ID'),
   DOCAI_OUTPUT_URI:  opt('DOCAI_OUTPUT_BUCKET'),
 
   // GCS
   GCS_BUCKET:        bucketName(req('GCS_BUCKET')),
   RESULT_BUCKET:     bucketName(opt('RESULT_BUCKET', req('GCS_BUCKET'))),
 
   // Tasks
   QUEUE_NAME:        req('QUEUE_NAME'),
   TASKS_LOCATION:    req('TASKS_LOCATION'),
   WORKER_TASK_URL:   opt('WORKER_TASK_URL', '/api/worker/ingest'),
 
   // 추출/기타
   MAX_DOC_PAGES_INLINE: parseInt(opt('MAX_DOC_PAGES_INLINE', '15'), 10),
-  GEMINI_MODEL_CLASSIFY: req('GEMINI_MODEL_CLASSIFY'),
-  GEMINI_MODEL_EXTRACT:  req('GEMINI_MODEL_EXTRACT'),
+  GEMINI_MODEL_CLASSIFY: opt('GEMINI_MODEL_CLASSIFY', 'gemini-2.5-flash'),
+  GEMINI_MODEL_EXTRACT:  opt('GEMINI_MODEL_EXTRACT', 'gemini-2.5-flash'),
   VERTEX_PAGE_PICK_MODEL: opt('VERTEX_PAGE_PICK_MODEL', 'gemini-2.5-flash'),
   VERTEX_EMBED_TEXT:      opt('VERTEX_EMBED_TEXT', 'text-embedding-005'),
 };
